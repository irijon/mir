{"version":3,"sources":["App.js","js.js","serviceWorker.js","index.js"],"names":["App","props","handleChangeDate","e","setState","date","target","value","handleChangeSumm","summ","handleChangeYear","year","handleChangeBal","bal","handleChangeOtv","otv","isNumeric","num","isNaN","onSubmit","state","list","alert","onItog","itogList","year_fix","Array","m_arr","q","q_num","i","length","match","j","substr","replace","month","quartet","filter","v","Date","getFullYear","final","console","log","cul","button","otchet","className","onChange","this","type","onClick","disabled","style","borderRight","borderLeft","map","val","key","toString","textAlign","marginTop","index","React","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3cb0ef56.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css'\nimport { cul } from './js'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      date: '',\n      summ: '',\n      list: [],\n      year: '',\n      itogList: [],\n      button: false,\n      otchet: false,\n      bal: '',\n      otv: ''\n    }\n  }\n\n  handleChangeDate = (e) => {\n    this.setState({ date: e.target.value })\n  }\n\n  handleChangeSumm = (e) => {\n    this.setState({ summ: e.target.value })\n  }\n\n  handleChangeYear = (e) => {\n    this.setState({ year: e.target.value })\n  }\n\n  handleChangeBal = (e) => {\n    this.setState({ bal: e.target.value })\n  }\n\n  handleChangeOtv = (e) => {\n    this.setState({ otv: e.target.value })\n  }\n\n  isNumeric = (num) => {\n    return !isNaN(num)\n  }\n\n  onSubmit = () => {\n    if (this.state.date && this.state.summ && this.isNumeric(this.state.summ)) {\n      this.setState({\n        date: '',\n        summ: '',\n        list: [...this.state.list, {\n          date: this.state.date,\n          summ: this.state.summ,\n        }]\n      })\n    } else {\n      alert(\"Некорректный ввод\")\n    }\n  }\n\n  onItog = () => {\n    if (this.state.year && this.isNumeric(this.state.year)) {\n      const itogList = cul(this.state.year, this.state.list)\n      this.setState({\n        itogList,\n        button: true\n      })\n    } else {\n      alert(\"Некорректный год\")\n    }\n  }\n\n  otchet = () => {\n    this.setState({\n      otchet: !this.state.otchet\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"main-main\">\n        <div className=\"main\">\n          <div className=\"inputs\">\n            <div className=\"label\">Дата : <input onChange={this.handleChangeDate} value={this.state.date} type=\"date\"></input></div>\n            <div className=\"label\">Сумма : <input onChange={this.handleChangeSumm} value={this.state.summ} type=\"text\"></input></div>\n            <div className=\"label\">\n              <button onClick={this.onSubmit} className=\"btn\">Добавить</button>\n            </div>\n          </div>\n          <div className=\"table\">\n\n            <div className=\"button-container\">\n              {this.state.list.length >= 3 && !this.state.otchet? (<button {...this.state.year ? {} : { disabled: true }} onClick={this.onItog} className=\"btn\">Рассчет</button>) : (<div className={\"btn-notdisplay\"}></div>)}\n              <div className=\"label\" >на : {this.state.otchet ?  \"01.01.\" : ''}<input {...this.state.otchet ? { className: 'dis', disabled: true } : {}} onChange={this.handleChangeYear} value={this.state.year} type=\"text\"></input></div>\n              <div className=\"label\" >балансовый счет : <input {...this.state.otchet ? { className: 'dis', disabled: true } : {}} onChange={this.handleChangeBal} value={this.state.bal} type=\"text\"></input></div>\n              <div className=\"label\" >исполнитель : <input {...this.state.otchet ? { className: 'dis', disabled: true } : {}} onChange={this.handleChangeOtv} value={this.state.otv} type=\"text\"></input></div>\n            </div>\n            <div className=\"table-res\">\n              <div style={{ borderRight: '1px solid #afafaf' }} className=\"table-item header\">Дата</div>\n              <div style={{ borderRight: '1px solid #afafaf' }} className=\"table-item header\">Сумма за день</div>\n              <div style={{ borderRight: '1px solid #afafaf' }} className=\"table-item header\">Сумма с начала месяца</div>\n              <div className=\"table-item header\">Сумма с начала квартала</div>\n              <div style={{ borderLeft: '1px solid #afafaf' }} className=\"table-item header\">Сумма с начала года</div>\n            </div>\n            <div className=\"table-res-scroll\">\n              {this.state.itogList.map((val, i) => (\n                <div key={i.toString()} className=\"table-res anim\">\n                  <div style={{ borderRight: '1px solid #afafaf' }} className=\"table-item\">{val.date}</div>\n                  <div style={{ borderRight: '1px solid #afafaf' }} className=\"table-item\">{val.summ}</div>\n                  <div style={{ borderRight: '1px solid #afafaf' }} className=\"table-item\">{val.month} </div>\n                  <div className=\"table-item\">{val.quartet} </div>\n                  <div style={{ borderLeft: '1px solid #afafaf' }} className=\"table-item\">{val.year}</div>\n                </div>\n              ))}\n              {this.state.itogList == 0 ? (<p style={{ textAlign: 'center', marginTop: '30px' }}>нет данных</p>) : (<></>)}\n            </div>\n            {this.state.button? <div className=\"button-container\" style={{ marginTop: '30px' }}>\n              <button onClick={this.otchet} className=\"btn\">Показать как отчет</button>\n            </div> : (<></>)}\n          </div>\n        </div>\n        <div className=\"aside\">\n          {/* eslint-disable-next-line eqeqeq*/}\n          {this.state.list == 0 ? (<p>Добавьте отчеты</p>) : (this.state.list.map((value, index) => (\n            <div className=\"item\" key={index.toString()}>\n              <div className=\"label-right\">Дата : <label>{value.date}</label></div>\n              <div className=\"label-right\">Сумма : <label>{value.summ}</label></div>\n            </div>\n          )))}\n        </div>\n      </div>\n    );\n  }\n}","export function cul(year_fix, Array) {\r\n\tlet m_arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; //массив для хранения баланса за каждый месяц\r\n\tlet q = [0, 0, 0, 0]; //то же самое, но для кварталов\r\n\tlet year = 0; //думаю сам поймешь\r\n\tlet q_num = 0; //тут будет храниться номер квартала\r\n\tfor (let i = 0; i < Array.length; i++) {\r\n\t\tif ((Array[i].date).match(/^\\d\\d\\d\\d/) == year_fix) { //проверяю год\r\n\t\t\tyear = year - -Array[i].summ; //минусы нужны для того, чтобы год и сумму перевести в числа и сложить (не знаю как это работает, но оно работает)\r\n\t\t\tlet j = Array[i].date.substr(5, 2).replace(/^0/, ''); //если месяц начинается на 0 (04, 09 и тд), то 0 убираю\r\n\t\t\tm_arr[j] = m_arr[j] - -Array[i].summ; //считаю шо там по месяцам мы заработали\r\n\t\t\t//дальше я определяю к какому кварталу принадлежит каждая запись и считаю доход (например, если месяц 5 разделить на 7, то значение будет болье 1, значит это второй квартал и тд)\r\n\t\t\tif ((j / 4) < 1) {\r\n\t\t\t\tq[0] = q[0] - -Array[i].summ;\r\n\t\t\t\tq_num = 0;\r\n\t\t\t} else if ((j / 7) < 1) {\r\n\t\t\t\tq[1] = q[1] - -Array[i].summ;\r\n\t\t\t\tq_num = 1;\r\n\t\t\t} else if ((j / 10) < 1) {\r\n\t\t\t\tq[2] = q[2] - -Array[i].summ;\r\n\t\t\t\tq_num = 2;\r\n\t\t\t} else if ((j / 13) < 1) {\r\n\t\t\t\tq[3] = q[3] - -Array[i].summ;\r\n\t\t\t\tq_num = 3;\r\n\t\t\t}\r\n\t\t\t//добавляю новые свойства в исходный объект\r\n\t\t\tArray[i].month = m_arr[j];\r\n\t\t\tArray[i].quartet = q[q_num];\r\n\t\t\tArray[i].year = year;\r\n\t\t}\r\n\t}\r\n\tArray = Array.filter((v)=>(\r\n\t\tnew Date(v.date).getFullYear()==year_fix\r\n\t\t))\r\n\tlet final = [];\r\n\tlet j = 0;\r\n\tfor (let i = 0; i < Array.length; i++) {\r\n\t\tif (Array[i].month) {\r\n\t\t\tfinal[j] = Array[i];\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n    console.log(\"cul -> Array\", Array)\r\n\treturn Array\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}